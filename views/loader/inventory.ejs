<!-- ==== Inventory Management ==== -->
<div id="inventoryPage" class="page active">
    <h2 class="section-title">
        <i class="fas fa-boxes"></i> Inventory Skid Management
    </h2>

    <!-- Project display -->
    <div class="fixed-info" style="margin: 0 25px 15px;">
        <p><strong>Current Project:</strong> <%= project.code %> â€“ <%= project.name %></p>
    </div>

    <!-- Inventory Skid Table -->
    <h3 class="section-title" style="font-size: 1.2rem; margin-top: 30px; border-bottom: none; padding: 0 25px;">
        <i class="fas fa-list-ul"></i> Skids in Inventory
    </h3>
    <div class="table-responsive" style="padding: 0 25px;">
        <table id="inventorySkidTable">
            <thead>
            <tr>
                <th>Inv. ID</th>
                <th>Width (ft)</th>
                <th>Length (ft)</th>
                <th>Weight (lbs)</th>
                <th>Description</th>
                <th class="no-print">Actions</th>
            </tr>
            </thead>
            <tbody id="inventorySkidTableBody">
            <% if (inventorySkids && inventorySkids.length > 0) { %>
                <% inventorySkids.forEach((skid, index) => { %>
                    <tr>
                        <td><%= skid.id %></td>
                        <td><%= skid.width?.toFixed(2) || '?' %></td>
                        <td><%= skid.length?.toFixed(2) || '?' %></td>
                        <td><%= skid.weight?.toFixed(2) || '?' %></td>
                        <td><%= skid.description || '-' %></td>
                        <td class="action-buttons no-print">
                            <button type="button" class="btn-edit"
                                    data-skid-id="<%= skid.id %>"
                                    data-width="<%= skid.width %>"
                                    data-length="<%= skid.length %>"
                                    data-weight="<%= skid.weight %>"
                                    data-description="<%= skid.description ? skid.description.replace(/"/g, '&quot;') : '' %>"
                                    title="Edit Skid">
                                <i class="fas fa-edit"></i>
                            </button>
                            <form action="/loader/inventory/<%= project.code %>/skid/<%= skid.id %>?_method=DELETE"
                                  method="POST" style="display:inline;"
                                  onsubmit="return confirm('Are you sure you want to delete this inventory skid?')">
                                <button type="submit" class="btn-delete" title="Delete Skid">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </form>
                        </td>
                    </tr>
                <% }); %>
            <% } else { %>
                <tr>
                    <td colspan="6" style="text-align: center;">No inventory skids found for this project.</td>
                </tr>
            <% } %>
            </tbody>
        </table>
    </div>

    <!-- Action Buttons for Inventory -->
    <div class="d-flex justify-content-between align-items-center mb-3 mt-3 no-print" style="padding: 0 25px;">
        <button class="btn btn-success" id="showAddInventorySkidBtn" onclick="showAddSkidForm()">
            <i class="fas fa-plus"></i> Add Skid to Inventory
        </button>
        <form action="/loader/inventory/<%= project.code %>/clear?_method=DELETE"
              method="POST" style="display:inline;"
              onsubmit="return confirm('WARNING: Are you sure you want to remove ALL inventory skids for this project? This cannot be undone.')">
            <button type="submit" id="resetInventorySkidsBtn" class="btn btn-danger"
                    <%= inventorySkids && inventorySkids.length > 0 ? '' : 'disabled' %>
                    title="Delete all skids listed for the selected project's inventory">
                <i class="fas fa-trash-alt"></i> Clear All Skids
            </button>
        </form>
    </div>

    <!-- Add/Edit Skid Form Container -->
    <div class="form-container no-print" id="addInventorySkidFormContainer" style="display: none; margin: 20px 25px;">
        <h4 id="skidFormTitle"><i class="fas fa-plus-circle"></i> Add New Skid to Inventory</h4>
        <form id="skidForm" action="/loader/inventory/<%= project.code %>/skid" method="POST">
            <input type="hidden" id="editMode" name="editMode" value="false">
            <input type="hidden" id="skidId" name="skidId" value="">
            <!-- Add method-override for PUT/DELETE methods -->
            <input type="hidden" id="_method" name="_method" value="POST">

            <div class="row">
                <div class="col-md-3">
                    <div class="form-group">
                        <label class="form-label required">Width <span class="unit-label">(ft)</span></label>
                        <div class="input-group">
                            <input type="number" id="width" name="width" class="form-control"
                                   min="0.1" max="40" step="0.01" required placeholder="e.g., 4">
                            <span class="input-group-text">ft</span>
                        </div>
                        <div class="invalid-feedback">Please enter a valid width (0.1-40).</div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label class="form-label required">Length <span class="unit-label">(ft)</span></label>
                        <div class="input-group">
                            <input type="number" id="length" name="length" class="form-control"
                                   min="0.1" max="40" step="0.01" required placeholder="e.g., 4">
                            <span class="input-group-text">ft</span>
                        </div>
                        <div class="invalid-feedback">Please enter a valid length (0.1-40).</div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label class="form-label required">Weight <span class="unit-label">(lbs)</span></label>
                        <div class="input-group">
                            <input type="number" id="weight" name="weight" class="form-control"
                                   min="1" required placeholder="e.g., 500">
                            <span class="input-group-text">lbs</span>
                        </div>
                        <div class="invalid-feedback">Please enter a valid weight (min 1).</div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label class="form-label">Description</label>
                        <textarea id="description" name="description" class="form-control"
                                  placeholder="Type description here..." rows="3"></textarea>
                    </div>
                </div>
            </div>
            <div class="button-group">
                <button type="button" class="btn btn-secondary" onclick="hideSkidForm()">
                    <i class="fas fa-times"></i> Cancel
                </button>
                <button type="submit" class="btn btn-primary" id="saveSkidBtn">
                    <i class="fas fa-plus"></i> Add Skid
                </button>
            </div>
        </form>
    </div>

    <!-- Navigation Buttons -->
    <div class="button-group no-print" style="margin-top: 30px; padding: 0 25px;">
        <a href="/loader" class="btn btn-secondary">
            <i class="fas fa-arrow-left"></i> Back to Task Selection
        </a>
        <a href="/loader/project-selection?task=inventory" class="btn btn-secondary">
            <i class="fas fa-project-diagram"></i> Select Different Project
        </a>
    </div>
</div>

<%- contentFor('scripts') %>
<script>
    // Wait for document to be fully loaded
    document.addEventListener('DOMContentLoaded', function() {
        // Get references to DOM elements
        const addSkidBtn = document.getElementById('showAddInventorySkidBtn');
        const skidForm = document.getElementById('skidForm');
        const formContainer = document.getElementById('addInventorySkidFormContainer');
        const cancelBtn = formContainer.querySelector('.btn-secondary');

        // Add event listener for showing the add skid form
        if (addSkidBtn) {
            addSkidBtn.addEventListener('click', function() {
                showAddSkidForm();
            });
        }

        // Add event listener for hiding the skid form
        if (cancelBtn) {
            cancelBtn.addEventListener('click', function() {
                hideSkidForm();
            });
        }

        // Add event listeners to all edit buttons
        document.querySelectorAll('.btn-edit').forEach(button => {
            button.addEventListener('click', function() {
                const skidId = this.getAttribute('data-skid-id');
                const width = this.getAttribute('data-width');
                const length = this.getAttribute('data-length');
                const weight = this.getAttribute('data-weight');
                const description = this.getAttribute('data-description');

                showEditSkidForm(skidId, width, length, weight, description);
            });
        });

        // Add form validation event listener
        if (skidForm) {
            skidForm.addEventListener('submit', validateSkidForm);
        }
    });

    // Show add skid form
    function showAddSkidForm() {
        const formContainer = document.getElementById('addInventorySkidFormContainer');
        const form = document.getElementById('skidForm');
        const title = document.getElementById('skidFormTitle');
        const saveBtn = document.getElementById('saveSkidBtn');

        // Configure for Add mode
        document.getElementById('editMode').value = 'false';
        document.getElementById('skidId').value = '';
        form.reset();

        // Update UI for Add mode
        title.innerHTML = '<i class="fas fa-plus-circle"></i> Add New Skid to Inventory';
        saveBtn.innerHTML = '<i class="fas fa-plus"></i> Add Skid';

        // Set or change form action for adding
        form.action = '/loader/inventory/<%= project.code %>/skid';
        form.method = 'POST';

        // Show the form container
        formContainer.style.display = 'block';

        // Focus first field
        document.getElementById('width').focus();
    }

    // Show edit skid form
    function showEditSkidForm(skidId, width, length, weight, description) {
        const formContainer = document.getElementById('addInventorySkidFormContainer');
        const form = document.getElementById('skidForm');
        const title = document.getElementById('skidFormTitle');
        const saveBtn = document.getElementById('saveSkidBtn');

        // Configure for Edit mode
        document.getElementById('editMode').value = 'true';
        document.getElementById('skidId').value = skidId;

        // Set form values
        document.getElementById('width').value = width;
        document.getElementById('length').value = length;
        document.getElementById('weight').value = weight;
        document.getElementById('description').value = description || '';

        // Update UI for Edit mode
        title.innerHTML = '<i class="fas fa-edit"></i> Edit Inventory Skid ' + skidId;
        saveBtn.innerHTML = '<i class="fas fa-save"></i> Save Changes';

        // Set or change form action for editing
        form.action = '/loader/inventory/<%= project.code %>/skid/' + skidId + '?_method=PUT';
        form.method = 'POST';

        // Show the form container
        formContainer.style.display = 'block';

        // Focus first field
        document.getElementById('width').focus();
    }

    // Hide skid form
    function hideSkidForm() {
        document.getElementById('addInventorySkidFormContainer').style.display = 'none';
        document.getElementById('skidForm').reset();
    }

    // Form validation
    function validateSkidForm(e) {
        const form = this;
        const requiredInputs = form.querySelectorAll('[required]');
        let isValid = true;

        // Remove previous validation messages
        form.querySelectorAll('.is-invalid').forEach(el => {
            el.classList.remove('is-invalid');
        });

        // Check required fields
        requiredInputs.forEach(input => {
            if (!input.value.trim()) {
                input.classList.add('is-invalid');
                isValid = false;
            }
        });

        // Check width constraints
        const width = parseFloat(form.width.value);
        if (isNaN(width) || width < 0.1 || width > 40) {
            form.width.classList.add('is-invalid');
            isValid = false;
        }

        // Check length constraints
        const length = parseFloat(form.length.value);
        if (isNaN(length) || length < 0.1 || length > 40) {
            form.length.classList.add('is-invalid');
            isValid = false;
        }

        // Check weight constraints
        const weight = parseFloat(form.weight.value);
        if (isNaN(weight) || weight < 1) {
            form.weight.classList.add('is-invalid');
            isValid = false;
        }

        if (!isValid) {
            e.preventDefault();
        }
    }
</script>